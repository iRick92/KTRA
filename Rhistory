shiny::runApp()
format(Sys.time(),"%%B-%Y")
format(Sys.time(),"%B-%Y")
runApp()
runApp()
format(Sys.time(),"%M-%Y")
format(Sys.time(),"%MM-%Y")
format(Sys.time(),"%B-%Y")
runApp()
as.Date("April-2020")
as.Date("April-2020")
runApp()
as.yearmon("MAY 2020","%M %Y")
as.yearmon("MAY 2020","%M %Y")
as.yearmon("MAY 2020","%M %Y")
as.yearmon("MAY 2020","%M %yyyy")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
as.yearmon("MAY 2020","%b %y")
x <- as.yearmon("MAY 2020","%b %y")
as.Date(x)
as.Date(x)-1
as.Date(x)+30
library(lubridate)
floor_date(as.Date(x)+40)
monthdf("May-2020")
monthdf <- function(x){
k <- as.Date(as.yearmon("x","%b %y"))
start_date <- ceiling_date(k-1, unit = "months")
end_date <- floor_date(k+32,unit = "months")
dfr <- data.frame(date=seq(start_date,end_date,by=1))
}
monthdf("May-2020")
k <- as.Date(as.yearmon("May 2020","%b %y"))
k
ceiling_date(k-1, unit = "months")
k-1
ceiling_date((k-1), unit = "months")
floor_date(k+32,unit = "months")
floor_date(k+50,unit = "months")
floor_date(k+59,unit = "months")
floor_date(k+70,unit = "months")
floor_date(k+69,unit = "months")
floor_date(k+65,unit = "months")
floor_date(k+63,unit = "months")
floor_date(k+61,unit = "months")
floor_date(k+60,unit = "months")
ceiling_date(k-32,unit = "months")
floor_date(k-32,unit = "months")
ceiling_date(k-32,unit = "months")
floor_date(k+32,unit = "months")-1
data.frame(date=seq("30/04/2020","30/06/2020",by = 1))
data.frame(date=seq("30-04-2020","30-06-2020",by = 1))
data.frame(date=seq("30-04-2020","15-06-2020",by = 1))
r < -ceiling_date(k-32,unit = "months")
r <- ceiling_date(k-32,unit = "months")
r
runApp()
runApp()
runApp()
as.yearmon("May 2020","%b %y")
as.Date(as.yearmon("May 2020","%b %y"))
as.Date("May 2020")
as.Date(as.yearmon("May 2020","%b %y"))
runApp()
input$month_selection
runApp()
dfr <- data.frame(date=seq(k,as.Date(end_date),by=1))
runApp()
runApp()
floor_x <- ymd_hms("2009-08-03 12:01:59.23")
floor_date(x, "month")
floor_date(x, "month")
floor_date(floor_x, "month")
ceiling_date(floor_x,"month")
ceiling_date(floor_x,"month")-1
runApp()
Sys.Date
Sys.Date(
)
Sys.Date()
format(Sys.Date,"MM-yyyy")
format(Sys.Date,"M yyyy")
format(Sys.Date,"M yyyy")
format(Sys.Date(),"M yyyy")
format(Sys.Date(),pattern = "M yyyy")
format(Sys.Date(),pattern = "b yyyy")
format(Sys.Date(),pattern = "b yyyy")
as.Date(Sys.Date(), "M yyyy")
format(Sys.Date(),"%m-%Y")
format(Sys.Date(),"%b-%Y")
format(Sys.Date(),"%b %Y")
runApp()
runApp()
runApp()
format(Sys.Date(),"%b %Y")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
remotes::install_github("dreamRs/tuicalendr")
runApp()
runApp()
runApp()
runApp()
gcal <-
dates %>%
mutate(
# Softly fill in the weekend days
weekend = case_when(weekend ~ "#f8f8f8", TRUE ~ "#FFFFFF")
) %>%
ggplot() +
aes(wday_name, week_year) +
# the calendar grid
geom_tile(aes(fill = weekend), color = "#aaaaaa") +
# highlight first day of each month
geom_tile(
data = day_one,
fill = "#f78154",
alpha = 0.25
)   +
scale_x_discrete(position = "top") +
scale_y_discrete(labels = week_start_labels) +
scale_fill_identity() +
scale_color_identity() +
guides(fill = FALSE) +
theme_minimal(base_family = "PT Sans") +
theme(
axis.text = element_text("PT Sans Narrow"),
axis.title = element_blank(),
panel.grid = element_blank(),
axis.text.x.top = element_text(face = "bold"),
axis.title.x.top = element_blank(),
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
format(Sys.Date,"MM-yyyy")
x <- c('1','a','b')
rev(x)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
gcal <- ggplot(dfr,aes(x=week,y=day))+
geom_tile(aes(fill=track), color = "#aaaaaa")+
geom_text(aes(label=ddate),
family = "PT Sans Narrow",
color = "#f8f8f8",
size = 4,
# push text to the top left corner
hjust = 0,
nudge_x = 0.45,
vjust = 1,
nudge_y = -0.45)+
coord_flip() +
scale_y_discrete()+
theme(
axis.text.y =  element_blank(),
axis.ticks.y  = element_blank(),
axis.title.y = element_blank(),
axis.title.x = element_blank(),
legend.position = "none"
)
runApp()
runApp()
View(`%AND%`)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(lubridate)
read.csv("MOCK_DATA.csv")
